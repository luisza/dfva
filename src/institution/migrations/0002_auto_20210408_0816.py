# Generated by Django 3.1.2 on 2021-04-08 14:16

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    dependencies = [
        ('corebase', '0004_auto_20210408_0816'),
        ('institution', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='StampDataRequest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('arrived_time', models.DateTimeField(auto_now_add=True)),
                ('update_time', models.DateTimeField(auto_now=True)),
                ('request_datetime', models.DateTimeField(help_text="'%Y-%m-%d %H:%M:%S',   es decir  '2006-10-25 14:30:59'")),
                ('status', models.IntegerField(choices=[(0, 'Solicitud recibida correctamente.'), (1, 'Ha ocurrido algún problema al solicitar la firma.'), (2, 'Solicitud con campos incompletos.'), (3, 'Existe una diferencia no permitida entre la fecha y hora del cliente y la del servidor.'), (4, 'La entidad no se encuentra registrada.'), (5, 'La entidad se encuentra en estado inactiva.'), (6, 'El negocio no pertenece a la entidad solicitante.'), (7, 'El negocio no cuenta con un sello electrónico configurado.'), (8, 'El negocio cuenta con una configuración de sello electrónico deshabilitada.'), (9, 'Documento no válido.'), (10, 'El Hash enviado del documento no coincide con el hash calculado.'), (11, 'El documento XML no es válido para ser contrafirmado.'), (12, 'La longitud de la razón no es válida.'), (13, 'El documento PDF posee firmas, para este tipo de documento, la firma de Certificación debe ser la primera.')], default=0)),
                ('status_text', models.CharField(default='n/d', max_length=256)),
                ('signed_document', models.TextField(blank=True, null=True)),
                ('response_datetime', models.DateTimeField(auto_now=True)),
                ('expiration_datetime', models.DateTimeField()),
                ('duration', models.SmallIntegerField(default=360)),
                ('received_notification', models.BooleanField(default=False)),
                ('hash_docsigned', models.TextField(blank=True, null=True)),
                ('document_format', models.CharField(default='n/d', max_length=25)),
                ('place', models.CharField(blank=True, max_length=150, null=True)),
                ('reason', models.CharField(blank=True, max_length=125, null=True)),
                ('was_successfully', models.BooleanField(default=False)),
                ('id_functionality', models.IntegerField(default=-1)),
                ('notification_url', models.URLField()),
                ('eta', models.DateTimeField(blank=True, null=True)),
                ('document', models.TextField(default=' ')),
                ('document_hash', models.TextField(default=' ')),
                ('algorithm_hash', models.CharField(default='Sha256', max_length=500)),
                ('rety_call_bccr', models.SmallIntegerField(default=0)),
            ],
            options={
                'ordering': ('request_datetime',),
            },
        ),
        migrations.RenameField(
            model_name='authenticatedatarequest',
            old_name='sign_document',
            new_name='signed_document',
        ),
        migrations.RenameField(
            model_name='signdatarequest',
            old_name='sign_document',
            new_name='signed_document',
        ),
        migrations.AddField(
            model_name='institution',
            name='can_stamp',
            field=models.BooleanField(default=False, verbose_name='Puede sellar electrónicamente'),
        ),
        migrations.AlterField(
            model_name='institution',
            name='active',
            field=models.BooleanField(default=True, verbose_name='Está activo'),
        ),
        migrations.AlterField(
            model_name='institution',
            name='bccr_bussiness',
            field=models.IntegerField(default=1, verbose_name='Negocio para BCCR'),
        ),
        migrations.AlterField(
            model_name='institution',
            name='bccr_entity',
            field=models.IntegerField(default=1, verbose_name='Entidad para BCCR'),
        ),
        migrations.AlterField(
            model_name='institution',
            name='code',
            field=models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='Código'),
        ),
        migrations.AlterField(
            model_name='institution',
            name='domain',
            field=models.CharField(max_length=250, verbose_name='Dominio para el certificado ej. servicio.ucr.ac.cr'),
        ),
        migrations.AlterField(
            model_name='institution',
            name='email',
            field=models.EmailField(max_length=254, verbose_name='Correo electrónico'),
        ),
        migrations.AlterField(
            model_name='institution',
            name='institution_unit',
            field=models.CharField(default='ND', max_length=250, verbose_name='Unidad en el certificado'),
        ),
        migrations.AlterField(
            model_name='institution',
            name='name',
            field=models.CharField(max_length=250, verbose_name='Nombre de la aplicación'),
        ),
        migrations.AlterField(
            model_name='institution',
            name='phone',
            field=models.CharField(max_length=25, null=True, verbose_name='Teléfono de contacto'),
        ),
        migrations.AlterField(
            model_name='institutionstats',
            name='notified',
            field=models.BooleanField(default=False, verbose_name='Notificado'),
        ),
        migrations.AlterField(
            model_name='institutionstats',
            name='status',
            field=models.SmallIntegerField(default=1, verbose_name='Estado'),
        ),
        migrations.AlterField(
            model_name='notificationurl',
            name='description',
            field=models.CharField(max_length=250, verbose_name='Descripción'),
        ),
        migrations.AlterField(
            model_name='notificationurl',
            name='is_demo',
            field=models.BooleanField(default=False, verbose_name='Es demo'),
        ),
        migrations.AlterField(
            model_name='notificationurl',
            name='not_webapp',
            field=models.BooleanField(default=False, verbose_name='Sin URL de notificiación'),
        ),
        migrations.CreateModel(
            name='StampRequest',
            fields=[
                ('code', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('arrived_time', models.DateTimeField(auto_now_add=True)),
                ('update_time', models.DateTimeField(auto_now=True)),
                ('data_hash', models.CharField(help_text='Suma hash de datos de tamaño máximo 130 caracteres, usando el\n                                 algoritmo especificado ', max_length=130)),
                ('algorithm', models.CharField(choices=[('sha256', 'sha256'), ('sha384', 'sha384'), ('sha512', 'sha512')], help_text=' Debe ser alguno de los siguientes: sha256, sha384, sha512', max_length=7)),
                ('public_certificate', models.TextField(help_text='Certificado público de la institución (ver Institución) ')),
                ('institution', models.CharField(help_text='UUID de la institución', max_length=50)),
                ('encrypt_method', models.CharField(blank=True, choices=[('aes_eax', 'aes_eax (recomendado)'), ('aes-256-cfb', 'aes-256-cfb')], default='aes_eax', max_length=25)),
                ('data_request', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='institution.stampdatarequest')),
            ],
            options={
                'ordering': ('arrived_time',),
            },
        ),
        migrations.AddField(
            model_name='stampdatarequest',
            name='institution',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='institution.institution'),
        ),
        migrations.AddField(
            model_name='stampdatarequest',
            name='system_metrics',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='corebase.system_request_metric'),
        ),
    ]
