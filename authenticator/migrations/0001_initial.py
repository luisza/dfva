# -*- coding: utf-8 -*-
# Generated by Django 1.11 on 2017-04-15 05:15
from __future__ import unicode_literals

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Authenticate_Data_Request',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notification_url', models.URLField()),
                ('identification', models.CharField(max_length=15, validators=[django.core.validators.RegexValidator('^(\\d{9-11})$', message='Debe contener 9 dígitos o 11 para extranjeros y 10 cédulas jurídicas por ejemplo: 102340456 para nacionales o 10234045611 extranjeros')])),
                ('request_datetime', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='Authenticate_Request',
            fields=[
                ('code', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('status', models.IntegerField(choices=[(1, 'Solicitud recibida correctamente.'), (2, 'Ha ocurrido algún problema al solicitar la firma.'), (3, 'Solicitud con campos incompletos.'), (4, 'Diferencia no permitida de hora entre cliente y servidor.'), (5, 'La entidad no se encuentra registrada.'), (6, 'La entidad se encuentra en estado inactiva.'), (7, 'La URL no pertenece a la entidad solicitante.'), (8, 'El tamaño de hash inválido debe estar entre 1 y 130 caracteres.'), (9, 'Algoritmo desconocido'), (10, 'Certificado incorrecto')], default=1)),
                ('arrived_time', models.DateTimeField(auto_now_add=True)),
                ('update_time', models.DateTimeField(auto_now=True)),
                ('expirate_datetime', models.DateTimeField(blank=True, null=True)),
                ('data_hash', models.CharField(max_length=130)),
                ('algorithm', models.CharField(choices=[('sha256', 'sha256'), ('sha384', 'sha384'), ('sha512', 'sha512')], max_length=7)),
                ('public_certificate', models.TextField()),
                ('data_request', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='authenticator.Authenticate_Data_Request')),
            ],
            options={
                'ordering': ('arrived_time',),
            },
        ),
        migrations.CreateModel(
            name='Institution',
            fields=[
                ('name', models.CharField(max_length=250)),
                ('code', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('actived', models.BooleanField(default=True)),
                ('domain', models.CharField(max_length=250)),
                ('private_key', models.TextField()),
                ('public_key', models.TextField()),
                ('public_certificate', models.TextField()),
                ('server_sign_key', models.TextField()),
                ('server_public_key', models.TextField()),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Notification_URL',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=250)),
                ('url', models.URLField()),
                ('institution', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='authenticator.Institution')),
            ],
        ),
        migrations.AddField(
            model_name='authenticate_data_request',
            name='institution',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='authenticator.Institution'),
        ),
    ]
