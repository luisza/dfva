# -*- coding: utf-8 -*-
# Generated by Django 1.11.3 on 2017-07-20 19:40
from __future__ import unicode_literals

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('corebase', '0003_auto_20170719_0547'),
    ]

    operations = [
        migrations.CreateModel(
            name='Advertencia',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descripcion', models.CharField(max_length=512)),
            ],
        ),
        migrations.CreateModel(
            name='ErrorEncontrado',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(max_length=250)),
                ('detalle', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Firmante',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cedula', models.CharField(max_length=25)),
                ('fecha_de_firma', models.DateField()),
                ('nombre_completo', models.CharField(max_length=25)),
            ],
        ),
        migrations.CreateModel(
            name='ValidateCertificateDataRequest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notification_url', models.URLField()),
                ('identification', models.CharField(help_text="'%Y-%m-%d %H:%M:%S',   es decir  '2006-10-25 14:30:59'", max_length=15, null=True, validators=[django.core.validators.RegexValidator('^(\\d{9,11})$', message='Debe contener 9 dígitos o 11 para extranjeros y 10 para cédulas jurídicas por ejemplo: 102340456 para nacionales o 10234045611 para extranjeros')])),
                ('request_datetime', models.DateTimeField()),
                ('code', models.CharField(default='N/D', max_length=20)),
                ('status', models.IntegerField(choices=[(1, 'Solicitud recibida correctamente'), (2, 'Ha ocurrido algún problema al solicitar la firma'), (3, 'Solicitud con campos incompletos'), (4, 'Diferencia de hora no permitida entre cliente y servidor'), (5, 'La entidad no se encuentra registrada'), (6, 'La entidad se encuentra en estado inactiva'), (7, 'La URL no pertenece a la entidad solicitante'), (8, 'El tamaño de hash debe ser entre 1 y 130 caracteres'), (9, 'Algoritmo desconocido'), (10, 'Certificado incorrecto')], default=1)),
                ('response_datetime', models.DateTimeField(auto_now=True)),
                ('codigo_de_error', models.IntegerField()),
                ('fue_exitosa', models.BooleanField(default=True)),
                ('nombre_completo', models.CharField(max_length=250, null=True)),
                ('inicio_vigencia', models.DateTimeField(null=True)),
                ('fin_vigencia', models.DateTimeField(null=True)),
                ('institution', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='corebase.Institution')),
            ],
            options={
                'permissions': (('view_validatecertificatedatarequest', 'Can see available validate certificate Data Request'),),
                'ordering': ('request_datetime',),
            },
        ),
        migrations.CreateModel(
            name='ValidateCertificateRequest',
            fields=[
                ('code', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('arrived_time', models.DateTimeField(auto_now_add=True)),
                ('update_time', models.DateTimeField(auto_now=True)),
                ('data_hash', models.CharField(help_text='Suma hash de datos de tamaño máximo 130 caracteres, usando el\n                                 algoritmo especificado ', max_length=130)),
                ('algorithm', models.CharField(choices=[('sha256', 'sha256'), ('sha384', 'sha384'), ('sha512', 'sha512')], help_text=' Debe ser alguno de los siguientes: sha256, sha384, sha512', max_length=7)),
                ('public_certificate', models.TextField(help_text='Certificado público de la institución (ver Institución) ')),
                ('institution', models.CharField(help_text='UUID de la institución', max_length=50)),
                ('data_request', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='validator.ValidateCertificateDataRequest')),
            ],
            options={
                'permissions': (('view_validaterequest', 'Can see available validate certificate Request'),),
                'ordering': ('arrived_time',),
            },
        ),
        migrations.CreateModel(
            name='ValidateDocumentDataRequest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notification_url', models.URLField()),
                ('request_datetime', models.DateTimeField()),
                ('code', models.CharField(default='N/D', max_length=20)),
                ('status', models.IntegerField(choices=[(1, 'Solicitud recibida correctamente'), (2, 'Ha ocurrido algún problema al solicitar la firma'), (3, 'Solicitud con campos incompletos'), (4, 'Diferencia de hora no permitida entre cliente y servidor'), (5, 'La entidad no se encuentra registrada'), (6, 'La entidad se encuentra en estado inactiva'), (7, 'La URL no pertenece a la entidad solicitante'), (8, 'El tamaño de hash debe ser entre 1 y 130 caracteres'), (9, 'Algoritmo desconocido'), (10, 'Certificado incorrecto')], default=1)),
                ('fue_exitosa', models.BooleanField(default=True)),
                ('advertencias', models.ManyToManyField(to='validator.Advertencia')),
                ('errores', models.ManyToManyField(to='validator.ErrorEncontrado')),
                ('firmantes', models.ManyToManyField(to='validator.Firmante')),
                ('institution', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='corebase.Institution')),
            ],
            options={
                'permissions': (('view_validatedocumentdatarequest', 'Can see available validate document Data Request'),),
                'ordering': ('request_datetime',),
            },
        ),
        migrations.CreateModel(
            name='ValidateDocumentRequest',
            fields=[
                ('code', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('arrived_time', models.DateTimeField(auto_now_add=True)),
                ('update_time', models.DateTimeField(auto_now=True)),
                ('data_hash', models.CharField(help_text='Suma hash de datos de tamaño máximo 130 caracteres, usando el\n                                 algoritmo especificado ', max_length=130)),
                ('algorithm', models.CharField(choices=[('sha256', 'sha256'), ('sha384', 'sha384'), ('sha512', 'sha512')], help_text=' Debe ser alguno de los siguientes: sha256, sha384, sha512', max_length=7)),
                ('public_certificate', models.TextField(help_text='Certificado público de la institución (ver Institución) ')),
                ('institution', models.CharField(help_text='UUID de la institución', max_length=50)),
                ('data_request', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='validator.ValidateCertificateDataRequest')),
            ],
            options={
                'permissions': (('view_validateDocumentrequest', 'Can see validate document Sign Request'),),
                'ordering': ('arrived_time',),
            },
        ),
    ]
